// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "29.0.2"
        playServicesVersion = "17.0.0"
        minSdkVersion = 21
        compileSdkVersion = 29
        targetSdkVersion = 29
        playServicesVersion = "17.0.0"
    }
    repositories {
        jcenter()
        mavenCentral()
        google()
    }
    dependencies {
        classpath('com.android.tools.build:gradle:4.0.1')
        classpath('com.android.support:multidex:1.0.3')
        classpath 'com.google.gms:google-services:4.3.3'
        // classpath ('com.google.gms:google-services:4.2.0')
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0'
        classpath 'com.google.firebase:perf-plugin:1.3.1'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        // maven {
        //     url 'http://maven.innovatrics.com/releases'
        // }

        maven {
            // react-native-freshchat-sdk
            url "https://jitpack.io"
        }

        maven {
            url "https://sdk.smartlook.com/android/release"
        }

        google()
        jcenter()
        maven { url 'https://www.jitpack.io' }
    }
}

subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion 28     // have to match with build.gradle and app/build.gradle ones
                buildToolsVersion '28.0.3'  // have to match with build.gradle and app/build.gradle ones
                variantFilter { variant ->
                    def names = variant.flavors*.name
                    // To check for a certain build type, use variant.buildType.name == "<buildType>"
                    if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative56")) {
                        // Gradle ignores any variants that satisfy the conditions above.
                        setIgnore(true)
                    }
                }
            }
        }
    }
}
